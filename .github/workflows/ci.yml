name: CI
on:
  push:
    branches:
      - main
      - master
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:

  test-crossenv:
    runs-on: ubuntu-latest
    strategy:
      # If one platform fails, allow the rest to keep testing if `CI-no-fail-fast` label is present
      fail-fast: ${{ !contains(github.event.pull_request.labels.*.name, 'CI-no-fail-fast') }}
      matrix:
        platform: [
          { target: "aarch64-unknown-linux-gnu", arch: "aarch64" },
          { target: "armv7-unknown-linux-gnueabihf", arch: "armv7" },
        ]
    steps:
      - uses: actions/checkout@master
      - name: Build wheels
        run: |
          echo 'set -ex
          curl -sSf https://sh.rustup.rs | sh -s -- -y --default-toolchain stable
          source ~/.cargo/env
          rustup target add ${{ matrix.platform.target }}
          # https://github.com/pypa/setuptools_scm/issues/707
          git config --global --add safe.directory /io
          cd examples/rust_with_cffi/
          python3.9 -m pip install crossenv
          python3.9 -m crossenv "/opt/python/cp39-cp39/bin/python3" --cc $TARGET_CC --cxx $TARGET_CXX --sysroot $TARGET_SYSROOT --env LIBRARY_PATH= --manylinux manylinux1 venv
          . venv/bin/activate
          build-pip install cffi wheel "setuptools>=62.4"
          cross-expose cffi
          pip install wheel
          pip install -e ../../
          python setup.py bdist_wheel --py-limited-api=cp37
          ls -la dist/
          ' > build-wheels.sh
          docker run --rm -v "$PWD":/io -w /io messense/manylinux2014-cross:${{ matrix.platform.arch }} bash build-wheels.sh
      - name: Install abi3 wheel and run tests
        uses: uraimo/run-on-arch-action@v2.0.5
        with:
          arch: ${{ matrix.platform.arch }}
          distro: ubuntu20.04
          dockerRunArgs: |
            --volume "${PWD}/rqrcode:/rqrcode"
          install: |
            apt-get update
            apt-get install -y --no-install-recommends python3 python3-dev python3-pip build-essential libffi-dev
          run: |
            cd /rqrcode
            python3 --version
            pip3 install rqrcode/dist/rqrcode*.whl
            python3 -c "rqrcode.qrcode_unicode("hello")"

  