# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  windows:
    runs-on: windows-latest
    name: (${{ matrix.target }}, ${{ matrix.cfg_release_channel }})
    env:
      CFG_RELEASE_CHANNEL: ${{ matrix.cfg_release_channel }}
    strategy:
      # https://help.github.com/en/actions/getting-started-with-github-actions/about-github-actions#usage-limits
      # There's a limit of 60 concurrent jobs across all repos in the rust-lang organization.
      # In order to prevent overusing too much of that 60 limit, we throttle the
      # number of rustfmt jobs that will run concurrently.
      max-parallel: 2
      fail-fast: false
      matrix:
        target: ["x86_64-pc-windows-gnu"]
#         target: [
#           i686-pc-windows-gnu,
#           i686-pc-windows-msvc,
#           x86_64-pc-windows-gnu,
#           x86_64-pc-windows-msvc,
#         ]
        cfg_release_channel: [stable] #nightly, 

    steps:
    # The Windows runners have autocrlf enabled by default
    # which causes failures for some of rustfmt's line-ending sensitive tests
    - name: disable git eol translation
      run: git config --global core.autocrlf false
    - name: checkout
      uses: actions/checkout@v3

      # Run build
    - name: Install Rustup using win.rustup.rs
      run: |
        # Disable the download progress bar which can cause perf issues
        $ProgressPreference = "SilentlyContinue"
        Invoke-WebRequest https://win.rustup.rs/ -OutFile rustup-init.exe
        .\rustup-init.exe -y --default-host=x86_64-pc-windows-msvc --default-toolchain=none
        del rustup-init.exe
        rustup target add ${{ matrix.target }}
      shell: powershell

   # - name: Add mingw32 to path for i686-gnu
   #   run: |
   #     echo "C:\msys64\mingw32\bin" >> $GITHUB_PATH
   #   if: matrix.target == 'i686-pc-windows-gnu' && matrix.channel == 'nightly'
   #   shell: bash

    - name: Add mingw64 to path for x86_64-gnu
      run: echo "C:\msys64\mingw64\bin" >> $GITHUB_PATH
      if: matrix.target == 'x86_64-pc-windows-gnu' # && matrix.channel == 'nightly'
      shell: bash
      
    - name: Set up Python 3.10 
      uses: actions/setup-python@v3
      with:
          python-version: "3.10"
          
    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install wheel setuptools setuptools-rust maturin
        
    - name: Build wheels
      shell: bash
      run: |
       python setup.py bdist_wheel
       cd dist
       pip install rqrcode*.whl
       pip show rqrcode
       